basePath: /
definitions:
  pkg.Credentials:
    description: Credentials information
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  pkg.Order:
    description: Order information
    properties:
      address:
        type: string
      amount:
        type: integer
      code:
        type: integer
      customer:
        type: integer
      delivery_team:
        type: integer
      id:
        type: integer
      phone:
        type: string
      product_name:
        type: string
    type: object
  pkg.Product:
    description: Product information
    properties:
      id:
        type: integer
      price:
        type: integer
      product_name:
        type: string
      supplier_id:
        type: integer
    type: object
  pkg.Shipment:
    description: Shipment information
    properties:
      amount:
        type: integer
      id:
        type: integer
      order_id:
        type: integer
      shipment_date:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server for delivery services.
  termsOfService: http://swagger.io/terms/
  title: REST_API
  version: "1.0"
paths:
  /JSON/orders:
    get:
      description: Returns JSON with all orders
      operationId: get-orders-json
      produces:
      - application/json
      responses:
        "200":
          description: List of orders
          schema:
            items:
              $ref: '#/definitions/pkg.Order'
            type: array
      summary: Get all orders in JSON
      tags:
      - Basic
  /JSON/products:
    get:
      description: Returns JSON with all products
      operationId: get-products-json
      produces:
      - application/json
      responses:
        "200":
          description: List of products
          schema:
            items:
              $ref: '#/definitions/pkg.Product'
            type: array
      summary: Get all products in JSON
      tags:
      - Basic
  /JSON/shipments:
    get:
      description: Returns JSON with all shipments
      operationId: get-shipments-json
      produces:
      - application/json
      responses:
        "200":
          description: List of shipments
          schema:
            items:
              $ref: '#/definitions/pkg.Shipment'
            type: array
      summary: Get all shipments in JSON
      tags:
      - Basic
  /login:
    post:
      description: User must enter login and password to get token
      operationId: login
      parameters:
      - description: Users credentials
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/pkg.Credentials'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Invalid request
        "401":
          description: Wrong data
        "500":
          description: Cant generate token
      summary: Login in system
      tags:
      - Login
  /orders:
    get:
      description: Returns HTML page with table of all orders
      operationId: get-orders-html
      produces:
      - text/html
      responses:
        "200":
          description: HTML page with orders table
      summary: Get all orders in HTML table
      tags:
      - HTML
    post:
      consumes:
      - application/json
      description: Make new order and add it to database
      operationId: create-order
      parameters:
      - description: Order data in JSON
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/pkg.Order'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/pkg.Order'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create new order
      tags:
      - Protected
    put:
      consumes:
      - application/json
      description: Update order by its id
      operationId: update-order
      parameters:
      - description: Order data in JSON
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/pkg.Order'
      - description: Order id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg.Order'
        "400":
          description: Invalid request
        "404":
          description: Order not found
      summary: Update order
      tags:
      - Protected
  /orders/:id:
    delete:
      description: Delete order by its id
      operationId: delete-order
      parameters:
      - description: Order id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: no content
        "404":
          description: Order not found
      summary: Delete order
      tags:
      - Protected
    get:
      description: Return one order with certain id
      operationId: get-orders-by-id
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg.Order'
        "404":
          description: Order not found
      summary: Get order by its id
      tags:
      - Basic
  /products:
    get:
      description: Returns HTML page with table of all products
      operationId: get-products-html
      produces:
      - text/html
      responses:
        "200":
          description: HTML page with products table
      summary: Get all products in HTML table
      tags:
      - HTML
  /shipments:
    get:
      description: Returns HTML page with table of all Shipments
      operationId: get-Shipments-html
      produces:
      - text/html
      responses:
        "200":
          description: HTML page with Shipments table
      summary: Get all Shipments in HTML table
      tags:
      - HTML
swagger: "2.0"
tags:
- description: '"Basic functions"'
  name: Basic
- description: '"Return HTML pages with table"'
  name: HTML
- description: '"Authorization is required for access"'
  name: Protected
- description: '"Function for authorization"'
  name: Login
